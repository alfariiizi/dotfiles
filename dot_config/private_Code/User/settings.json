/**
 * Content:
 * - UI
 * - Editor
 * - Language
 * - VIM
 * - Neovim (Not Used)
 * - which-key
 */

{
  // **************************************************************************
  // ****************************** [UI] **************************************

  "workbench.colorCustomizations": {
    // "editor.background": "#1E1E2E", // this is catpuccin-mocha
    "editor.background": "#161626", // this is darker version
    "editorGutter.background": "#161626",
    // "sideBar.background": "#181818",
    // "activityBar.background": "#222",
    "tab.activeBackground": "#111"
    // "tab.inactiveBackground": "#222"
    // "editor.selectionBackground": "#222",
    // "editor.lineHighlightBackground": "#000",
  },
  "editor.fontSize": 15,
  "editor.minimap.enabled": false,
  "workbench.colorTheme": "Catppuccin Mocha",
  "workbench.editor.closeEmptyGroups": true,
  "workbench.editor.splitInGroupLayout": "horizontal",
  "workbench.iconTheme": "vscode-icons",
  "workbench.sideBar.location": "right",

  // https://github.com/microsoft/vscode/issues/12048
  "editor.scrollBeyondLastLine": false, // scroll before last line reaced
  "editor.scrollBeyondLastColumn": 4, // horizontal scrolling: scroll before 4 chars
  "editor.cursorSurroundingLines": 3, // vertical scrolling: scroll before 3 chars

  // **************************************************************************
  // ******************************** [Editor] ********************************

  "editor.cursorBlinking": "expand",
  "editor.smoothScrolling": true,
  "terminal.integrated.smoothScrolling": true,
  "workbench.list.smoothScrolling": true,
  "editor.fontFamily": "JetBrains Mono, Monego Ligatures, Monaco, Monaco Nerd Font Mono",
  "editor.fontLigatures": true,
  "editor.formatOnSave": true,
  "editor.lineNumbers": "relative",
  "editor.renderWhitespace": "boundary",
  "editor.suggestSelection": "first",
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": "punctuation.separator",
        "settings": {
          "fontStyle": "bold",
          "foreground": "#fbf700fd"
        }
      }
    ]
  },
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "hediet.vscode-drawio.resizeImages": null,
  "prettier.bracketSameLine": true,
  "python.languageServer": "Default",
  "reactSnippets.settings.prettierEnabled": true,
  "terminal.integrated.commandsToSkipShell": ["language-julia.interrupt"],
  "terminal.integrated.env.linux": {},
  "terminal.integrated.gpuAcceleration": "on",
  "workbench.editor.showTabs": "single",
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "extensions.experimental.affinity": {
    // For Performance
    "asvetliakov.vscode-neovim": 1,
    "vscodevim.vim": 1
  },

  // **************************************************************************
  // ****************************** [Language] ********************************

  // [ALL (shared configuration)]
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  // [CMAKE]
  "cmake.cmakePath": "/usr/bin/cmake",
  "cmake.configureOnOpen": true,
  // [JULIA]
  "julia.enableTelemetry": true,
  "julia.symbolCacheDownload": true,
  // [PRISMA]
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  // [JS/TS]
  "console-ninja.featureSet": "Community", // ref: https://stackoverflow.com/questions/74847053/how-to-fix-expression-produces-a-union-type-that-is-too-complex-to-represent-t
  // [PHP]
  // "[blade]": {
  //   "editor.defaultFormatter": "shufo.vscode-blade-formatter"
  // },
  // "[php]": {
  //   "editor.defaultFormatter": "DEVSENSE.phptools-vscode"
  // },
  // [JUPYTER]
  "jupyter.interactiveWindow.creationMode": "perFile",
  "jupyter.widgetScriptSources": ["jsdelivr.com", "unpkg.com"],
  // [PYTHON]
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    "editor.formatOnType": true
  },
  // [JUPYTER NOTEBOOK]
  "notebook.cellFocusIndicator": "border",
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "notebook.lineNumbers": "on",
  "notebook.stickyScroll.enabled": true,
  // [LATEX]
  // "latex-workshop.latex.outDir": "%DIR%/build",
  // "[latex]": {
  //   "editor.defaultFormatter": "James-Yu.latex-workshop",
  //   "editor.wordWrap": "off"
  // },
  "latex-workshop.latex.outDir": "./build",
  "latex-workshop.latexindent.path": "/usr/bin/latexindent",
  "latex-workshop.message.error.show": false,
  "latex-workshop.latex.autoBuild.cleanAndRetry.enabled": false,
  "latex-workshop.view.pdf.viewer": "tab",
  // [MARKDOWN]
  "markdown-preview-enhanced.breakOnSingleNewLine": false,
  // [EXCALIDRAW]
  "excalidraw.theme": "dark",
  // [ENV]
  "sync-env.envSource": ".env, .env.local, .env.development, .env.production",

  // **************************************************************************
  // ******************************** [Vim] ***********************************

  "vim.showMarksInGutter": false,
  "vim.easymotion": true,
  "vim.easymotionKeys": "asdghklqwertyuiopzxcvbnmfj",
  "vim.foldfix": true,
  "vim.surround": true,
  // For more CVIM: https://github.com/VSCodeVim/Vim/issues/8567
  "vim.flash.enable": true, // this for CVIM flash
  "vim.flash.ignorecase": true, // this for CVIM flash
  "vim.flash.labels": "asdfghjklqwertyuiopzxcvbnm",
  "vim.sneak": true,
  "vim.smartcase": true,
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-d>": true,
    "<C-f>": false,
    "<C-j>": false, // for window manager extension
    "<C-k>": false, // for window manager extension
    "<C-m>": false,
    "<C-q>": false,
    "<C-r>": true,
    "<C-space>": false,
    "<C-u>": true,
    "<C-v>": true
  },
  "vim.hlsearch": true,
  "vim.incsearch": true,
  "vim.insertModeKeyBindings": [
    // {
    //   "after": ["<Esc>"],
    //   "before": ["j", "k"]
    // }
  ],
  "vim.leader": "<space>",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [","],
      "commands": ["whichkey.show"]
    },
    // {
    //   "before": ["g"],
    //   "commands": [
    //     {
    //       "command": "extension.multiCommand.execute",
    //       "args": {
    //         "sequence": [
    //           "whichkey.show",
    //           { "command": "whichkey.triggerKey", "args": "g" }
    //         ]
    //       }
    //     }
    //   ]
    // },
    {
      "before": ["<space>", "<space>"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      // "before": ["<Esc>"], // to exit from search mode
      "before": ["<leader>", "n"], // to exit from search mode
      "commands": [":nohl"]
    },
    {
      "before": ["\\"], // remap local leader
      "after": ["`"]
    },

    // It has bug when navigate inside insert-mode
    // To solve the bug: https://github.com/VSCodeVim/Vim/issues/1323#issuecomment-1820784630
    // But, as long as you use normal-mode for navigation, it should be okay
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },

    {
      "before": ["<c-d>"],
      "after": ["<c-d>", "z", "z"]
    },
    {
      "before": ["<c-u>"],
      "after": ["<c-u>", "z", "z"]
    },

    {
      "after": ["d", "d"],
      "before": ["<leader>", "d"]
    },
    {
      "before": ["<leader>", "n"],
      "commands": [":nohl"]
    },
    {
      "before": ["<leader>", "w"],
      "commands": [":w"]
    },
    {
      "before": ["<leader>", "q"],
      "commands": [":q"]
    },
    {
      "before": ["<leader>", "/"],
      "commands": ["editor.action.commentLine"]
    },
    // {
    //     "before": ["d"],
    //     "after": [ "\"", "_", "d" ]
    // }
    {
      "after": ["\"", "_", "D"],
      "before": ["D"]
    },
    {
      "after": ["\"", "_", "x"],
      "before": ["x"]
    },
    {
      "after": ["\"", "_", "X"],
      "before": ["X"]
    },
    {
      "before": ["s"],
      "after": ["x", "i"]
      //   "before": ["s"]
      //   "after": ["\"", "_", "s"],
    },
    // {
    //   "after": ["\"", "_", "ciw"],
    //   "before": [""]
    // },

    // [FLASH.NVIM] use: f on normal-mode
    // {
    // Flash
    // "before": ["s"],
    // "after": ["<leader>", "<leader>", "/"]
    // },
    // {
    // Flash Treesitter
    // "before": ["S"],
    // "after": ["<leader>", "<leader>", "<leader>", "j"]
    // },

    // [LSP]
    {
      // Line Diagnostics
      "before": ["<leader>", "c", "d"],
      "commands": ["editor.action.showHover"],
      "when": "workbench.panel.output.active"
    },
    {
      // LSP info
      "before": ["<leader>", "c", "l"],
      "commands": ["workbench.action.output.toggleOutput"]
    },
    {
      // Goto Definition
      "before": ["g", "d"],
      "commands": ["editor.action.revealDefinition"]
    },
    {
      // References
      "before": ["g", "r"],
      "commands": ["editor.action.goToReferences"]
    },
    {
      // Goto Declaration
      "before": ["g", "D"],
      "commands": ["editor.action.revealDeclaration"]
    },
    {
      // Goto Implementation
      "before": ["g", "i"],
      "commands": ["editor.action.goToImplementation"]
    },
    {
      // Goto T[y]pe Definition
      "before": ["g", "y"],
      "commands": ["editor.action.goToTypeDefinition"]
    },
    {
      // Hover
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      // Signature Help
      "before": ["g", "K"],
      "commands": ["editor.action.triggerParameterHints"],
      "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
      // Signature Help
      "before": ["<C-k>"],
      "commands": ["editor.action.triggerParameterHints"],
      "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
      // Next Diagnostic
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"],
      "when": "editorFocus"
    },
    {
      // Prev Diagnostic
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"],
      "when": "editorFocus"
    },
    {
      // Next Error
      "before": ["]", "e"],
      "commands": ["editor.action.marker.next"],
      "when": "editorFocus"
    },
    {
      // Prev Error
      "before": ["[", "e"],
      "commands": ["editor.action.marker.prev"],
      "when": "editorFocus"
    },
    {
      // Next Warning
      "before": ["]", "w"],
      "commands": ["editor.action.marker.next"],
      "when": "editorFocus"
    },
    {
      // Prev Warning
      "before": ["[", "w"],
      "commands": ["editor.action.marker.prev"],
      "when": "editorFocus"
    },
    {
      // Format Document
      "before": ["<leader>", "c", "f"],
      "commands": ["editor.action.formatDocument"],
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    // {
    //   // Format Range
    //   "before": ["<leader>", "c", "f"],
    //   "commands": ["N/A - no VSCode equivalent"]
    // },
    {
      // Code Action
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"],
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
      // Source Action
      "before": ["<leader>", "c", "A"],
      "commands": ["editor.action.quickFix"],
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
      // Rename
      "before": ["<leader>", "c", "r"],
      "commands": ["editor.action.rename"],
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "/"],
      "commands": ["editor.action.commentLine"]
    },
    {
      "before": [","],
      "commands": ["whichkey.show"]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
      "before": ["<leader>", "s", "a"],
      "commands": ["editor.action.selectAll"]
    },
    {
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["<leader>", "u", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "q"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["<leader>", "h"],
      "commands": [":nohl"]
    },
    {
      "before": ["<leader>", "s", "v"],
      "commands": ["workbench.action.splitEditor"]
    },
    {
      "before": ["<leader>", "s", "h"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      "before": ["<leader>", "t", "o"],
      "commands": [":tabnew"]
    },
    {
      "before": ["<leader>", "t", "x"],
      "commands": [":tabclose"]
    },
    {
      "before": ["<S-h>"],
      "commands": [":tabp"]
    },
    {
      "before": ["<S-l>"],
      "commands": [":tabnext"]
    },
    {
      "before": ["<leader>", "f", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<leader>", "f", "s"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["<leader>", "r", "n"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["<leader>", "a", "f"],
      "commands": ["editor.action.autoFix"]
    },
    {
      "before": ["<leader>", "p", "d"],
      "commands": ["editor.action.peekDefinition"]
    },
    {
      "before": ["<leader>", "g", "d"],
      "commands": ["editor.action.revealDefinition"]
    },
    {
      "before": ["<S-k>"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["<leader>", "d"],
      "commands": ["editor.action.revealDefinition"]
    }
  ],
  "vim.visualModeKeyBindings": [
    //   {
    //     "before": ["g", "c"],
    //     "commands": ["editor.action.commentLine"]
    //   }
  ],
  "vim.smartRelativeLine": true,
  "vim.useCtrlKeys": false,
  "vim.useSystemClipboard": true,
  "vim.vimrc.enable": false,
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

  // **************************************************************************
  // **************************** [Neovim] ************************************

  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  // "vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim-vscode/init.vim",
  "vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim/init.lua",

  // **************************************************************************
  // **************************** [which-key] *********************************
  // note: all shortcut that start with the "leader" must be set here

  "whichkey.showButtons": true,
  "whichkey.showIcons": true,
  "whichkey.sortOrder": "alphabetically",
  "whichkey.delay": 0,
  "whichkey.bindings": [
    {
      "key": "w",
      "name": "Save file",
      "type": "command",
      "command": "workbench.action.files.save"
    },
    {
      "key": "q",
      "name": "Close file",
      "type": "command",
      "command": "workbench.action.closeActiveEditor"
    },
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "-",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "|",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": ",",
      "name": "Open Setting",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Setting JSON",
          "type": "command",
          "command": "workbench.action.openSettingsJson"
        },
        {
          "key": "S",
          "name": "Setting UI",
          "type": "command",
          "command": "workbench.action.openSettings"
        },
        {
          "key": "k",
          "name": "Keybinding JSON",
          "type": "command",
          "command": "workbench.action.openGlobalKeybindingsFile"
        },
        {
          "key": "K",
          "name": "Keybinding UI",
          "type": "command",
          "command": "workbench.action.openGlobalKeybindings"
        }
      ]
    },
    {
      "key": "/",
      "name": "comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "<C-/>"
    },
    {
      "key": "?",
      "name": "View All References",
      "type": "command",
      "command": "references-view.find",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart ebug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      // IT'S NOT WORKING
      "key": "l",
      "name": "List",
      "type": "bindings",
      "bindings": [
        {
          "key": "r",
          "name": "List Regex",
          "type": "command",
          // "command": "vim.remap",
          // "args": {
          //   "after": [":"]
          // }
          "command": "extension.multiCommand.execute",
          "args": {
            "sequence": [
              ":",
              "reg",
              "<cr>"
              // { "command": "whichkey.triggerKey", "args": "g" }
            ]
          }
        },
        {
          "key": "m",
          "name": "List Marks",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [":", "marks", "<CR>"]
          }
        }
      ]
    },
    {
      "key": "c",
      "name": "Code",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "A",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "f",
          "name": "Format Document",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "r",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        },
        {
          "key": "i",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        },
        {
          "key": "k",
          "name": "Signature Help",
          "type": "command",
          "command": "editor.action.triggerParameterHints",
          "when": "editorHasSignatureHelpProvider && editorTextFocus"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Go to",
      "type": "bindings",
      "bindings": [
        {
          "key": "g",
          "name": "Goto First line",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [":", "1", "<CR>"]
          }
        },
        {
          "key": "G",
          "name": "Goto Last line",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [":", "$", "<CR>"]
          }
        },
        {
          "key": "d",
          "name": "Goto Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "r",
          "name": "Goto References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Goto Declaration",
          "type": "command",
          "command": "editor.action.revealDeclaration"
        },
        {
          "key": "i",
          "name": "Goto Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "y",
          "name": "Goto Type Definition",
          "type": "command",
          "command": "editor.action.goToTypeDefinition"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "]",
          "name": "Next Problem",
          "type": "command",
          "command": "editor.action.marker.next",
          "when": "editorFocus"
        },
        {
          "key": "}",
          "name": "Next Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.nextInFiles",
          "when": "editorFocus"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "[",
          "name": "Prev Problem",
          "type": "command",
          "command": "editor.action.marker.prevInFiles",
          "when": "editorFocus"
        },
        {
          "key": "{",
          "name": "Prev Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.prev",
          "when": "editorFocus"
        }
      ]
    },
    {
      "key": "G",
      "name": "Git",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "g",
          "name": "Graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Pull",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "r",
          "name": "Rebase",
          "type": "command",
          "command": "git.rebase"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "m",
      "name": "Mark...",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Clear Bookmarks",
          "type": "command",
          "command": "bookmarks.clear"
        },
        {
          "key": "j",
          "name": "Next Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToNext",
          "when": "editorTextFocus"
        },
        {
          "key": "k",
          "name": "Previous Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToPrevious",
          "when": "editorTextFocus"
        },
        {
          "key": "l",
          "name": "List Bookmarks",
          "type": "command",
          "command": "bookmarks.listFromAllFiles",
          "when": "editorTextFocus"
        },
        {
          "key": "r",
          "name": "Refresh Bookmarks",
          "type": "command",
          "command": "bookmarks.refresh"
        },
        {
          "key": "t",
          "name": "Toggle Bookmark",
          "type": "command",
          "command": "bookmarks.toggle",
          "when": "editorTextFocus"
        },
        {
          "key": "s",
          "name": "Show Bookmarks",
          "type": "command",
          "command": "workbench.view.extension.bookmarks"
        }
      ]
    },
    {
      "key": "o",
      "name": "Open...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "workbench.action.files.openFolder"
        },
        {
          "key": "r",
          "name": "Recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "workbench.action.files.openFile"
        }
      ]
    },
    {
      "key": "p",
      "name": "Peek...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "Text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        }
      ]
    },
    {
      "key": "S",
      "name": "Menu",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "T",
          "name": "Focus Terminal",
          "type": "command",
          "command": "workbench.action.terminal.toggleTerminal",
          "when": "!terminalFocus"
        }
      ]
    },
    {
      "key": "u",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "Extensions",
      "type": "command",
      "command": "workbench.view.extensions"
    },
    {
      "key": "y",
      "name": "Sync...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Download Settings",
          "type": "command",
          "command": "extension.downloadSettings"
        },
        {
          "key": "u",
          "name": "Upload Settings",
          "type": "command",
          "command": "extension.updateSettings"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "typescript.enablePromptUseWorkspaceTsdk": true
}
